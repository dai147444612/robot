# 1 "demo.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 31 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 32 "<command-line>" 2
# 1 "demo.c"






# 1 "/usr/include/stdlib.h" 1 3 4
# 25 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/libc-header-start.h" 1 3 4
# 33 "/usr/include/arm-linux-gnueabihf/bits/libc-header-start.h" 3 4
# 1 "/usr/include/features.h" 1 3 4
# 424 "/usr/include/features.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 1 3 4
# 442 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 443 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/long-double.h" 1 3 4
# 444 "/usr/include/arm-linux-gnueabihf/sys/cdefs.h" 2 3 4
# 425 "/usr/include/features.h" 2 3 4
# 448 "/usr/include/features.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/gnu/stubs.h" 1 3 4
# 10 "/usr/include/arm-linux-gnueabihf/gnu/stubs.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/gnu/stubs-hard.h" 1 3 4
# 11 "/usr/include/arm-linux-gnueabihf/gnu/stubs.h" 2 3 4
# 449 "/usr/include/features.h" 2 3 4
# 34 "/usr/include/arm-linux-gnueabihf/bits/libc-header-start.h" 2 3 4
# 26 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 1 3 4
# 216 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 3 4

# 216 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 3 4
typedef unsigned int size_t;
# 328 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 3 4
typedef unsigned int wchar_t;
# 32 "/usr/include/stdlib.h" 2 3 4







# 1 "/usr/include/arm-linux-gnueabihf/bits/waitflags.h" 1 3 4
# 52 "/usr/include/arm-linux-gnueabihf/bits/waitflags.h" 3 4
typedef enum
{
  P_ALL,
  P_PID,
  P_PGID
} idtype_t;
# 40 "/usr/include/stdlib.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/waitstatus.h" 1 3 4
# 41 "/usr/include/stdlib.h" 2 3 4
# 55 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/floatn.h" 1 3 4
# 52 "/usr/include/arm-linux-gnueabihf/bits/floatn.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/floatn-common.h" 1 3 4
# 52 "/usr/include/arm-linux-gnueabihf/bits/floatn.h" 2 3 4
# 56 "/usr/include/stdlib.h" 2 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;





__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;
# 97 "/usr/include/stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;



extern double atof (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



__extension__ extern long long int atoll (const char *__nptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;



extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 176 "/usr/include/stdlib.h" 3 4
extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 385 "/usr/include/stdlib.h" 3 4
extern char *l64a (long int __n) __attribute__ ((__nothrow__ , __leaf__)) ;


extern long int a64l (const char *__s)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "/usr/include/arm-linux-gnueabihf/sys/types.h" 1 3 4
# 27 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4


# 1 "/usr/include/arm-linux-gnueabihf/bits/types.h" 1 3 4
# 27 "/usr/include/arm-linux-gnueabihf/bits/types.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 28 "/usr/include/arm-linux-gnueabihf/bits/types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;



typedef __int8_t __int_least8_t;
typedef __uint8_t __uint_least8_t;
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
typedef __int64_t __int_least64_t;
typedef __uint64_t __uint_least64_t;






__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;







__extension__ typedef long long int __intmax_t;
__extension__ typedef unsigned long long int __uintmax_t;
# 140 "/usr/include/arm-linux-gnueabihf/bits/types.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/typesizes.h" 1 3 4
# 141 "/usr/include/arm-linux-gnueabihf/bits/types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;




typedef int __sig_atomic_t;
# 30 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4



typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;


typedef __loff_t loff_t;




typedef __ino_t ino_t;
# 59 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4
typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;
# 97 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4
typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;
typedef __caddr_t caddr_t;





typedef __key_t key_t;




# 1 "/usr/include/arm-linux-gnueabihf/bits/types/clock_t.h" 1 3 4






typedef __clock_t clock_t;
# 127 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4

# 1 "/usr/include/arm-linux-gnueabihf/bits/types/clockid_t.h" 1 3 4






typedef __clockid_t clockid_t;
# 129 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types/time_t.h" 1 3 4






typedef __time_t time_t;
# 130 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types/timer_t.h" 1 3 4






typedef __timer_t timer_t;
# 131 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4
# 144 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 1 3 4
# 145 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;




# 1 "/usr/include/arm-linux-gnueabihf/bits/stdint-intn.h" 1 3 4
# 24 "/usr/include/arm-linux-gnueabihf/bits/stdint-intn.h" 3 4
typedef __int8_t int8_t;
typedef __int16_t int16_t;
typedef __int32_t int32_t;
typedef __int64_t int64_t;
# 156 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4
# 177 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4
typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 193 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 36 "/usr/include/endian.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/endian.h" 1 3 4
# 37 "/usr/include/endian.h" 2 3 4
# 60 "/usr/include/endian.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/byteswap.h" 1 3 4
# 33 "/usr/include/arm-linux-gnueabihf/bits/byteswap.h" 3 4
static __inline __uint16_t
__bswap_16 (__uint16_t __bsx)
{

  return __builtin_bswap16 (__bsx);



}






static __inline __uint32_t
__bswap_32 (__uint32_t __bsx)
{

  return __builtin_bswap32 (__bsx);



}
# 69 "/usr/include/arm-linux-gnueabihf/bits/byteswap.h" 3 4
__extension__ static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{

  return __builtin_bswap64 (__bsx);



}
# 61 "/usr/include/endian.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/uintn-identity.h" 1 3 4
# 32 "/usr/include/arm-linux-gnueabihf/bits/uintn-identity.h" 3 4
static __inline __uint16_t
__uint16_identity (__uint16_t __x)
{
  return __x;
}

static __inline __uint32_t
__uint32_identity (__uint32_t __x)
{
  return __x;
}

static __inline __uint64_t
__uint64_identity (__uint64_t __x)
{
  return __x;
}
# 62 "/usr/include/endian.h" 2 3 4
# 194 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4


# 1 "/usr/include/arm-linux-gnueabihf/sys/select.h" 1 3 4
# 30 "/usr/include/arm-linux-gnueabihf/sys/select.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/select.h" 1 3 4
# 31 "/usr/include/arm-linux-gnueabihf/sys/select.h" 2 3 4


# 1 "/usr/include/arm-linux-gnueabihf/bits/types/sigset_t.h" 1 3 4



# 1 "/usr/include/arm-linux-gnueabihf/bits/types/__sigset_t.h" 1 3 4




typedef struct
{
  unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
} __sigset_t;
# 5 "/usr/include/arm-linux-gnueabihf/bits/types/sigset_t.h" 2 3 4


typedef __sigset_t sigset_t;
# 34 "/usr/include/arm-linux-gnueabihf/sys/select.h" 2 3 4



# 1 "/usr/include/arm-linux-gnueabihf/bits/types/struct_timeval.h" 1 3 4







struct timeval
{
  __time_t tv_sec;
  __suseconds_t tv_usec;
};
# 38 "/usr/include/arm-linux-gnueabihf/sys/select.h" 2 3 4

# 1 "/usr/include/arm-linux-gnueabihf/bits/types/struct_timespec.h" 1 3 4
# 9 "/usr/include/arm-linux-gnueabihf/bits/types/struct_timespec.h" 3 4
struct timespec
{
  __time_t tv_sec;
  __syscall_slong_t tv_nsec;
};
# 40 "/usr/include/arm-linux-gnueabihf/sys/select.h" 2 3 4



typedef __suseconds_t suseconds_t;





typedef long int __fd_mask;
# 59 "/usr/include/arm-linux-gnueabihf/sys/select.h" 3 4
typedef struct
  {






    __fd_mask __fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];


  } fd_set;






typedef __fd_mask fd_mask;
# 91 "/usr/include/arm-linux-gnueabihf/sys/select.h" 3 4

# 101 "/usr/include/arm-linux-gnueabihf/sys/select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 113 "/usr/include/arm-linux-gnueabihf/sys/select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 126 "/usr/include/arm-linux-gnueabihf/sys/select.h" 3 4

# 197 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 244 "/usr/include/arm-linux-gnueabihf/sys/types.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/pthreadtypes.h" 1 3 4
# 23 "/usr/include/arm-linux-gnueabihf/bits/pthreadtypes.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/thread-shared-types.h" 1 3 4
# 77 "/usr/include/arm-linux-gnueabihf/bits/thread-shared-types.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/pthreadtypes-arch.h" 1 3 4
# 43 "/usr/include/arm-linux-gnueabihf/bits/pthreadtypes-arch.h" 3 4
struct __pthread_rwlock_arch_t
{
  unsigned int __readers;
  unsigned int __writers;
  unsigned int __wrphase_futex;
  unsigned int __writers_futex;
  unsigned int __pad3;
  unsigned int __pad4;
# 61 "/usr/include/arm-linux-gnueabihf/bits/pthreadtypes-arch.h" 3 4
  unsigned char __flags;
  unsigned char __shared;
  unsigned char __pad1;
  unsigned char __pad2;

  int __cur_writer;
};
# 78 "/usr/include/arm-linux-gnueabihf/bits/thread-shared-types.h" 2 3 4
# 88 "/usr/include/arm-linux-gnueabihf/bits/thread-shared-types.h" 3 4
typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;
# 118 "/usr/include/arm-linux-gnueabihf/bits/thread-shared-types.h" 3 4
struct __pthread_mutex_s
{
  int __lock ;
  unsigned int __count;
  int __owner;
# 148 "/usr/include/arm-linux-gnueabihf/bits/thread-shared-types.h" 3 4
  int __kind;
 

  unsigned int __nusers;






  __extension__ union
  {
    int __spins;
    __pthread_slist_t __list;
  };


 
};




struct __pthread_cond_s
{
  __extension__ union
  {
    __extension__ unsigned long long int __wseq;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __wseq32;
  };
  __extension__ union
  {
    __extension__ unsigned long long int __g1_start;
    struct
    {
      unsigned int __low;
      unsigned int __high;
    } __g1_start32;
  };
  unsigned int __g_refs[2] ;
  unsigned int __g_size[2];
  unsigned int __g1_orig_size;
  unsigned int __wrefs;
  unsigned int __g_signals[2];
};
# 24 "/usr/include/arm-linux-gnueabihf/bits/pthreadtypes.h" 2 3 4



typedef unsigned long int pthread_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_mutexattr_t;




typedef union
{
  char __size[4];
  int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;


union pthread_attr_t
{
  char __size[36];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef union
{
  struct __pthread_mutex_s __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;


typedef union
{
  struct __pthread_cond_s __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;





typedef union
{
  struct __pthread_rwlock_arch_t __data;
  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 245 "/usr/include/arm-linux-gnueabihf/sys/types.h" 2 3 4



# 395 "/usr/include/stdlib.h" 2 3 4






extern long int random (void) __attribute__ ((__nothrow__ , __leaf__));


extern void srandom (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));





extern int rand (void) __attribute__ ((__nothrow__ , __leaf__));

extern void srand (unsigned int __seed) __attribute__ ((__nothrow__ , __leaf__));



extern int rand_r (unsigned int *__seed) __attribute__ ((__nothrow__ , __leaf__));







extern double drand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern double erand48 (unsigned short int __xsubi[3]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int nrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) __attribute__ ((__nothrow__ , __leaf__));
extern long int jrand48 (unsigned short int __xsubi[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) __attribute__ ((__nothrow__ , __leaf__));
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern void *malloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;






extern void *realloc (void *__ptr, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__warn_unused_result__));
# 563 "/usr/include/stdlib.h" 3 4
extern void free (void *__ptr) __attribute__ ((__nothrow__ , __leaf__));


# 1 "/usr/include/alloca.h" 1 3 4
# 24 "/usr/include/alloca.h" 3 4
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 1 3 4
# 25 "/usr/include/alloca.h" 2 3 4







extern void *alloca (size_t __size) __attribute__ ((__nothrow__ , __leaf__));






# 567 "/usr/include/stdlib.h" 2 3 4





extern void *valloc (size_t __size) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;



extern void abort (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







extern int at_quick_exit (void (*__func) (void)) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern void exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void quick_exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));





extern void _Exit (int __status) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));




extern char *getenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 644 "/usr/include/stdlib.h" 3 4
extern int putenv (char *__string) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) __attribute__ ((__nothrow__ , __leaf__));
# 672 "/usr/include/stdlib.h" 3 4
extern char *mktemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 685 "/usr/include/stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 707 "/usr/include/stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 728 "/usr/include/stdlib.h" 3 4
extern char *mkdtemp (char *__template) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 781 "/usr/include/stdlib.h" 3 4
extern int system (const char *__command) ;
# 797 "/usr/include/stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) __attribute__ ((__nothrow__ , __leaf__)) ;






typedef int (*__compar_fn_t) (const void *, const void *);
# 817 "/usr/include/stdlib.h" 3 4
extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));
# 837 "/usr/include/stdlib.h" 3 4
extern int abs (int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern long int labs (long int __x) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;


__extension__ extern long long int llabs (long long int __x)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;






extern div_t div (int __numer, int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;


__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__)) ;
# 869 "/usr/include/stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (3, 4, 5)));





extern int mblen (const char *__s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));


extern int wctomb (char *__s, wchar_t __wchar) __attribute__ ((__nothrow__ , __leaf__));



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) __attribute__ ((__nothrow__ , __leaf__));

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     __attribute__ ((__nothrow__ , __leaf__));







extern int rpmatch (const char *__response) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 954 "/usr/include/stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2, 3))) ;
# 1000 "/usr/include/stdlib.h" 3 4
extern int getloadavg (double __loadavg[], int __nelem)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 1010 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/stdlib-float.h" 1 3 4
# 1011 "/usr/include/stdlib.h" 2 3 4
# 1020 "/usr/include/stdlib.h" 3 4

# 8 "demo.c" 2
# 1 "/usr/include/stdio.h" 1 3 4
# 27 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/libc-header-start.h" 1 3 4
# 28 "/usr/include/stdio.h" 2 3 4





# 1 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 1 3 4
# 34 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 37 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/include/arm-linux-gnueabihf/bits/types/__fpos_t.h" 1 3 4




# 1 "/usr/include/arm-linux-gnueabihf/bits/types/__mbstate_t.h" 1 3 4
# 13 "/usr/include/arm-linux-gnueabihf/bits/types/__mbstate_t.h" 3 4
typedef struct
{
  int __count;
  union
  {
    unsigned int __wch;
    char __wchb[4];
  } __value;
} __mbstate_t;
# 6 "/usr/include/arm-linux-gnueabihf/bits/types/__fpos_t.h" 2 3 4




typedef struct _G_fpos_t
{
  __off_t __pos;
  __mbstate_t __state;
} __fpos_t;
# 40 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types/__fpos64_t.h" 1 3 4
# 10 "/usr/include/arm-linux-gnueabihf/bits/types/__fpos64_t.h" 3 4
typedef struct _G_fpos64_t
{
  __off64_t __pos;
  __mbstate_t __state;
} __fpos64_t;
# 41 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types/__FILE.h" 1 3 4



struct _IO_FILE;
typedef struct _IO_FILE __FILE;
# 42 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types/FILE.h" 1 3 4



struct _IO_FILE;


typedef struct _IO_FILE FILE;
# 43 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/types/struct_FILE.h" 1 3 4
# 35 "/usr/include/arm-linux-gnueabihf/bits/types/struct_FILE.h" 3 4
struct _IO_FILE;
struct _IO_marker;
struct _IO_codecvt;
struct _IO_wide_data;




typedef void _IO_lock_t;





struct _IO_FILE
{
  int _flags;


  char *_IO_read_ptr;
  char *_IO_read_end;
  char *_IO_read_base;
  char *_IO_write_base;
  char *_IO_write_ptr;
  char *_IO_write_end;
  char *_IO_buf_base;
  char *_IO_buf_end;


  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;
  int _flags2;
  __off_t _old_offset;


  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];

  _IO_lock_t *_lock;







  __off64_t _offset;

  struct _IO_codecvt *_codecvt;
  struct _IO_wide_data *_wide_data;
  struct _IO_FILE *_freeres_list;
  void *_freeres_buf;
  size_t __pad5;
  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];
};
# 44 "/usr/include/stdio.h" 2 3 4
# 52 "/usr/include/stdio.h" 3 4
typedef __gnuc_va_list va_list;
# 84 "/usr/include/stdio.h" 3 4
typedef __fpos_t fpos_t;
# 133 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/stdio_lim.h" 1 3 4
# 134 "/usr/include/stdio.h" 2 3 4



extern FILE *stdin;
extern FILE *stdout;
extern FILE *stderr;






extern int remove (const char *__filename) __attribute__ ((__nothrow__ , __leaf__));

extern int rename (const char *__old, const char *__new) __attribute__ ((__nothrow__ , __leaf__));



extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) __attribute__ ((__nothrow__ , __leaf__));
# 173 "/usr/include/stdio.h" 3 4
extern FILE *tmpfile (void) ;
# 187 "/usr/include/stdio.h" 3 4
extern char *tmpnam (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;




extern char *tmpnam_r (char *__s) __attribute__ ((__nothrow__ , __leaf__)) ;
# 204 "/usr/include/stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__malloc__)) ;







extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);
# 227 "/usr/include/stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 246 "/usr/include/stdio.h" 3 4
extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 279 "/usr/include/stdio.h" 3 4
extern FILE *fdopen (int __fd, const char *__modes) __attribute__ ((__nothrow__ , __leaf__)) ;
# 292 "/usr/include/stdio.h" 3 4
extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  __attribute__ ((__nothrow__ , __leaf__)) ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) __attribute__ ((__nothrow__ , __leaf__)) ;





extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) __attribute__ ((__nothrow__ , __leaf__));



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) __attribute__ ((__nothrow__ , __leaf__));




extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) __attribute__ ((__nothrow__ , __leaf__));


extern void setlinebuf (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));







extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) __attribute__ ((__nothrow__));





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) __attribute__ ((__nothrow__));



extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__)) __attribute__ ((__format__ (__printf__, 3, 0)));
# 379 "/usr/include/stdio.h" 3 4
extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));







extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) __attribute__ ((__nothrow__ , __leaf__));
# 409 "/usr/include/stdio.h" 3 4
extern int fscanf (FILE *__restrict __stream, const char *__restrict __format, ...) __asm__ ("" "__isoc99_fscanf")

                               ;
extern int scanf (const char *__restrict __format, ...) __asm__ ("" "__isoc99_scanf")
                              ;
extern int sscanf (const char *__restrict __s, const char *__restrict __format, ...) __asm__ ("" "__isoc99_sscanf") __attribute__ ((__nothrow__ , __leaf__))

                      ;
# 434 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__format__ (__scanf__, 2, 0)));
# 457 "/usr/include/stdio.h" 3 4
extern int vfscanf (FILE *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vfscanf")



     __attribute__ ((__format__ (__scanf__, 2, 0))) ;
extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vscanf")

     __attribute__ ((__format__ (__scanf__, 1, 0))) ;
extern int vsscanf (const char *__restrict __s, const char *__restrict __format, __gnuc_va_list __arg) __asm__ ("" "__isoc99_vsscanf") __attribute__ ((__nothrow__ , __leaf__))



     __attribute__ ((__format__ (__scanf__, 2, 0)));
# 491 "/usr/include/stdio.h" 3 4
extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);






extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 516 "/usr/include/stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);
# 527 "/usr/include/stdio.h" 3 4
extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);
# 543 "/usr/include/stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);







extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 609 "/usr/include/stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
                             size_t *__restrict __n, int __delimiter,
                             FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
                           size_t *__restrict __n, int __delimiter,
                           FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
                          size_t *__restrict __n,
                          FILE *__restrict __stream) ;







extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);
# 679 "/usr/include/stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);







extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);
# 713 "/usr/include/stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 737 "/usr/include/stdio.h" 3 4
extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 763 "/usr/include/stdio.h" 3 4
extern void clearerr (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));

extern int feof (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;

extern int ferror (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;



extern void clearerr_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
extern int feof_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
extern int ferror_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;







extern void perror (const char *__s);





# 1 "/usr/include/arm-linux-gnueabihf/bits/sys_errlist.h" 1 3 4
# 26 "/usr/include/arm-linux-gnueabihf/bits/sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];
# 788 "/usr/include/stdio.h" 2 3 4




extern int fileno (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int fileno_unlocked (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;
# 806 "/usr/include/stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) __attribute__ ((__nothrow__ , __leaf__));
# 846 "/usr/include/stdio.h" 3 4
extern void flockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));



extern int ftrylockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__)) ;


extern void funlockfile (FILE *__stream) __attribute__ ((__nothrow__ , __leaf__));
# 864 "/usr/include/stdio.h" 3 4
extern int __uflow (FILE *);
extern int __overflow (FILE *, int);
# 879 "/usr/include/stdio.h" 3 4

# 9 "demo.c" 2
# 1 "/usr/include/unistd.h" 1 3 4
# 27 "/usr/include/unistd.h" 3 4

# 202 "/usr/include/unistd.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/posix_opt.h" 1 3 4
# 203 "/usr/include/unistd.h" 2 3 4



# 1 "/usr/include/arm-linux-gnueabihf/bits/environments.h" 1 3 4
# 22 "/usr/include/arm-linux-gnueabihf/bits/environments.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/wordsize.h" 1 3 4
# 23 "/usr/include/arm-linux-gnueabihf/bits/environments.h" 2 3 4
# 207 "/usr/include/unistd.h" 2 3 4
# 226 "/usr/include/unistd.h" 3 4
# 1 "/usr/lib/gcc/arm-linux-gnueabihf/8/include/stddef.h" 1 3 4
# 227 "/usr/include/unistd.h" 2 3 4
# 255 "/usr/include/unistd.h" 3 4
typedef __useconds_t useconds_t;
# 267 "/usr/include/unistd.h" 3 4
typedef __intptr_t intptr_t;






typedef __socklen_t socklen_t;
# 287 "/usr/include/unistd.h" 3 4
extern int access (const char *__name, int __type) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));
# 304 "/usr/include/unistd.h" 3 4
extern int faccessat (int __fd, const char *__file, int __type, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;
# 334 "/usr/include/unistd.h" 3 4
extern __off_t lseek (int __fd, __off_t __offset, int __whence) __attribute__ ((__nothrow__ , __leaf__));
# 353 "/usr/include/unistd.h" 3 4
extern int close (int __fd);






extern ssize_t read (int __fd, void *__buf, size_t __nbytes) ;





extern ssize_t write (int __fd, const void *__buf, size_t __n) ;
# 376 "/usr/include/unistd.h" 3 4
extern ssize_t pread (int __fd, void *__buf, size_t __nbytes,
        __off_t __offset) ;






extern ssize_t pwrite (int __fd, const void *__buf, size_t __n,
         __off_t __offset) ;
# 417 "/usr/include/unistd.h" 3 4
extern int pipe (int __pipedes[2]) __attribute__ ((__nothrow__ , __leaf__)) ;
# 432 "/usr/include/unistd.h" 3 4
extern unsigned int alarm (unsigned int __seconds) __attribute__ ((__nothrow__ , __leaf__));
# 444 "/usr/include/unistd.h" 3 4
extern unsigned int sleep (unsigned int __seconds);







extern __useconds_t ualarm (__useconds_t __value, __useconds_t __interval)
     __attribute__ ((__nothrow__ , __leaf__));






extern int usleep (__useconds_t __useconds);
# 469 "/usr/include/unistd.h" 3 4
extern int pause (void);



extern int chown (const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern int fchown (int __fd, __uid_t __owner, __gid_t __group) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int lchown (const char *__file, __uid_t __owner, __gid_t __group)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;






extern int fchownat (int __fd, const char *__file, __uid_t __owner,
       __gid_t __group, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;



extern int chdir (const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern int fchdir (int __fd) __attribute__ ((__nothrow__ , __leaf__)) ;
# 511 "/usr/include/unistd.h" 3 4
extern char *getcwd (char *__buf, size_t __size) __attribute__ ((__nothrow__ , __leaf__)) ;
# 525 "/usr/include/unistd.h" 3 4
extern char *getwd (char *__buf)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) __attribute__ ((__deprecated__)) ;




extern int dup (int __fd) __attribute__ ((__nothrow__ , __leaf__)) ;


extern int dup2 (int __fd, int __fd2) __attribute__ ((__nothrow__ , __leaf__));
# 543 "/usr/include/unistd.h" 3 4
extern char **__environ;







extern int execve (const char *__path, char *const __argv[],
     char *const __envp[]) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int fexecve (int __fd, char *const __argv[], char *const __envp[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));




extern int execv (const char *__path, char *const __argv[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execle (const char *__path, const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execl (const char *__path, const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));



extern int execvp (const char *__file, char *const __argv[])
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));




extern int execlp (const char *__file, const char *__arg, ...)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 598 "/usr/include/unistd.h" 3 4
extern int nice (int __inc) __attribute__ ((__nothrow__ , __leaf__)) ;




extern void _exit (int __status) __attribute__ ((__noreturn__));





# 1 "/usr/include/arm-linux-gnueabihf/bits/confname.h" 1 3 4
# 24 "/usr/include/arm-linux-gnueabihf/bits/confname.h" 3 4
enum
  {
    _PC_LINK_MAX,

    _PC_MAX_CANON,

    _PC_MAX_INPUT,

    _PC_NAME_MAX,

    _PC_PATH_MAX,

    _PC_PIPE_BUF,

    _PC_CHOWN_RESTRICTED,

    _PC_NO_TRUNC,

    _PC_VDISABLE,

    _PC_SYNC_IO,

    _PC_ASYNC_IO,

    _PC_PRIO_IO,

    _PC_SOCK_MAXBUF,

    _PC_FILESIZEBITS,

    _PC_REC_INCR_XFER_SIZE,

    _PC_REC_MAX_XFER_SIZE,

    _PC_REC_MIN_XFER_SIZE,

    _PC_REC_XFER_ALIGN,

    _PC_ALLOC_SIZE_MIN,

    _PC_SYMLINK_MAX,

    _PC_2_SYMLINKS

  };


enum
  {
    _SC_ARG_MAX,

    _SC_CHILD_MAX,

    _SC_CLK_TCK,

    _SC_NGROUPS_MAX,

    _SC_OPEN_MAX,

    _SC_STREAM_MAX,

    _SC_TZNAME_MAX,

    _SC_JOB_CONTROL,

    _SC_SAVED_IDS,

    _SC_REALTIME_SIGNALS,

    _SC_PRIORITY_SCHEDULING,

    _SC_TIMERS,

    _SC_ASYNCHRONOUS_IO,

    _SC_PRIORITIZED_IO,

    _SC_SYNCHRONIZED_IO,

    _SC_FSYNC,

    _SC_MAPPED_FILES,

    _SC_MEMLOCK,

    _SC_MEMLOCK_RANGE,

    _SC_MEMORY_PROTECTION,

    _SC_MESSAGE_PASSING,

    _SC_SEMAPHORES,

    _SC_SHARED_MEMORY_OBJECTS,

    _SC_AIO_LISTIO_MAX,

    _SC_AIO_MAX,

    _SC_AIO_PRIO_DELTA_MAX,

    _SC_DELAYTIMER_MAX,

    _SC_MQ_OPEN_MAX,

    _SC_MQ_PRIO_MAX,

    _SC_VERSION,

    _SC_PAGESIZE,


    _SC_RTSIG_MAX,

    _SC_SEM_NSEMS_MAX,

    _SC_SEM_VALUE_MAX,

    _SC_SIGQUEUE_MAX,

    _SC_TIMER_MAX,




    _SC_BC_BASE_MAX,

    _SC_BC_DIM_MAX,

    _SC_BC_SCALE_MAX,

    _SC_BC_STRING_MAX,

    _SC_COLL_WEIGHTS_MAX,

    _SC_EQUIV_CLASS_MAX,

    _SC_EXPR_NEST_MAX,

    _SC_LINE_MAX,

    _SC_RE_DUP_MAX,

    _SC_CHARCLASS_NAME_MAX,


    _SC_2_VERSION,

    _SC_2_C_BIND,

    _SC_2_C_DEV,

    _SC_2_FORT_DEV,

    _SC_2_FORT_RUN,

    _SC_2_SW_DEV,

    _SC_2_LOCALEDEF,


    _SC_PII,

    _SC_PII_XTI,

    _SC_PII_SOCKET,

    _SC_PII_INTERNET,

    _SC_PII_OSI,

    _SC_POLL,

    _SC_SELECT,

    _SC_UIO_MAXIOV,

    _SC_IOV_MAX = _SC_UIO_MAXIOV,

    _SC_PII_INTERNET_STREAM,

    _SC_PII_INTERNET_DGRAM,

    _SC_PII_OSI_COTS,

    _SC_PII_OSI_CLTS,

    _SC_PII_OSI_M,

    _SC_T_IOV_MAX,



    _SC_THREADS,

    _SC_THREAD_SAFE_FUNCTIONS,

    _SC_GETGR_R_SIZE_MAX,

    _SC_GETPW_R_SIZE_MAX,

    _SC_LOGIN_NAME_MAX,

    _SC_TTY_NAME_MAX,

    _SC_THREAD_DESTRUCTOR_ITERATIONS,

    _SC_THREAD_KEYS_MAX,

    _SC_THREAD_STACK_MIN,

    _SC_THREAD_THREADS_MAX,

    _SC_THREAD_ATTR_STACKADDR,

    _SC_THREAD_ATTR_STACKSIZE,

    _SC_THREAD_PRIORITY_SCHEDULING,

    _SC_THREAD_PRIO_INHERIT,

    _SC_THREAD_PRIO_PROTECT,

    _SC_THREAD_PROCESS_SHARED,


    _SC_NPROCESSORS_CONF,

    _SC_NPROCESSORS_ONLN,

    _SC_PHYS_PAGES,

    _SC_AVPHYS_PAGES,

    _SC_ATEXIT_MAX,

    _SC_PASS_MAX,


    _SC_XOPEN_VERSION,

    _SC_XOPEN_XCU_VERSION,

    _SC_XOPEN_UNIX,

    _SC_XOPEN_CRYPT,

    _SC_XOPEN_ENH_I18N,

    _SC_XOPEN_SHM,


    _SC_2_CHAR_TERM,

    _SC_2_C_VERSION,

    _SC_2_UPE,


    _SC_XOPEN_XPG2,

    _SC_XOPEN_XPG3,

    _SC_XOPEN_XPG4,


    _SC_CHAR_BIT,

    _SC_CHAR_MAX,

    _SC_CHAR_MIN,

    _SC_INT_MAX,

    _SC_INT_MIN,

    _SC_LONG_BIT,

    _SC_WORD_BIT,

    _SC_MB_LEN_MAX,

    _SC_NZERO,

    _SC_SSIZE_MAX,

    _SC_SCHAR_MAX,

    _SC_SCHAR_MIN,

    _SC_SHRT_MAX,

    _SC_SHRT_MIN,

    _SC_UCHAR_MAX,

    _SC_UINT_MAX,

    _SC_ULONG_MAX,

    _SC_USHRT_MAX,


    _SC_NL_ARGMAX,

    _SC_NL_LANGMAX,

    _SC_NL_MSGMAX,

    _SC_NL_NMAX,

    _SC_NL_SETMAX,

    _SC_NL_TEXTMAX,


    _SC_XBS5_ILP32_OFF32,

    _SC_XBS5_ILP32_OFFBIG,

    _SC_XBS5_LP64_OFF64,

    _SC_XBS5_LPBIG_OFFBIG,


    _SC_XOPEN_LEGACY,

    _SC_XOPEN_REALTIME,

    _SC_XOPEN_REALTIME_THREADS,


    _SC_ADVISORY_INFO,

    _SC_BARRIERS,

    _SC_BASE,

    _SC_C_LANG_SUPPORT,

    _SC_C_LANG_SUPPORT_R,

    _SC_CLOCK_SELECTION,

    _SC_CPUTIME,

    _SC_THREAD_CPUTIME,

    _SC_DEVICE_IO,

    _SC_DEVICE_SPECIFIC,

    _SC_DEVICE_SPECIFIC_R,

    _SC_FD_MGMT,

    _SC_FIFO,

    _SC_PIPE,

    _SC_FILE_ATTRIBUTES,

    _SC_FILE_LOCKING,

    _SC_FILE_SYSTEM,

    _SC_MONOTONIC_CLOCK,

    _SC_MULTI_PROCESS,

    _SC_SINGLE_PROCESS,

    _SC_NETWORKING,

    _SC_READER_WRITER_LOCKS,

    _SC_SPIN_LOCKS,

    _SC_REGEXP,

    _SC_REGEX_VERSION,

    _SC_SHELL,

    _SC_SIGNALS,

    _SC_SPAWN,

    _SC_SPORADIC_SERVER,

    _SC_THREAD_SPORADIC_SERVER,

    _SC_SYSTEM_DATABASE,

    _SC_SYSTEM_DATABASE_R,

    _SC_TIMEOUTS,

    _SC_TYPED_MEMORY_OBJECTS,

    _SC_USER_GROUPS,

    _SC_USER_GROUPS_R,

    _SC_2_PBS,

    _SC_2_PBS_ACCOUNTING,

    _SC_2_PBS_LOCATE,

    _SC_2_PBS_MESSAGE,

    _SC_2_PBS_TRACK,

    _SC_SYMLOOP_MAX,

    _SC_STREAMS,

    _SC_2_PBS_CHECKPOINT,


    _SC_V6_ILP32_OFF32,

    _SC_V6_ILP32_OFFBIG,

    _SC_V6_LP64_OFF64,

    _SC_V6_LPBIG_OFFBIG,


    _SC_HOST_NAME_MAX,

    _SC_TRACE,

    _SC_TRACE_EVENT_FILTER,

    _SC_TRACE_INHERIT,

    _SC_TRACE_LOG,


    _SC_LEVEL1_ICACHE_SIZE,

    _SC_LEVEL1_ICACHE_ASSOC,

    _SC_LEVEL1_ICACHE_LINESIZE,

    _SC_LEVEL1_DCACHE_SIZE,

    _SC_LEVEL1_DCACHE_ASSOC,

    _SC_LEVEL1_DCACHE_LINESIZE,

    _SC_LEVEL2_CACHE_SIZE,

    _SC_LEVEL2_CACHE_ASSOC,

    _SC_LEVEL2_CACHE_LINESIZE,

    _SC_LEVEL3_CACHE_SIZE,

    _SC_LEVEL3_CACHE_ASSOC,

    _SC_LEVEL3_CACHE_LINESIZE,

    _SC_LEVEL4_CACHE_SIZE,

    _SC_LEVEL4_CACHE_ASSOC,

    _SC_LEVEL4_CACHE_LINESIZE,



    _SC_IPV6 = _SC_LEVEL1_ICACHE_SIZE + 50,

    _SC_RAW_SOCKETS,


    _SC_V7_ILP32_OFF32,

    _SC_V7_ILP32_OFFBIG,

    _SC_V7_LP64_OFF64,

    _SC_V7_LPBIG_OFFBIG,


    _SC_SS_REPL_MAX,


    _SC_TRACE_EVENT_NAME_MAX,

    _SC_TRACE_NAME_MAX,

    _SC_TRACE_SYS_MAX,

    _SC_TRACE_USER_EVENT_MAX,


    _SC_XOPEN_STREAMS,


    _SC_THREAD_ROBUST_PRIO_INHERIT,

    _SC_THREAD_ROBUST_PRIO_PROTECT

  };


enum
  {
    _CS_PATH,


    _CS_V6_WIDTH_RESTRICTED_ENVS,



    _CS_GNU_LIBC_VERSION,

    _CS_GNU_LIBPTHREAD_VERSION,


    _CS_V5_WIDTH_RESTRICTED_ENVS,



    _CS_V7_WIDTH_RESTRICTED_ENVS,



    _CS_LFS_CFLAGS = 1000,

    _CS_LFS_LDFLAGS,

    _CS_LFS_LIBS,

    _CS_LFS_LINTFLAGS,

    _CS_LFS64_CFLAGS,

    _CS_LFS64_LDFLAGS,

    _CS_LFS64_LIBS,

    _CS_LFS64_LINTFLAGS,


    _CS_XBS5_ILP32_OFF32_CFLAGS = 1100,

    _CS_XBS5_ILP32_OFF32_LDFLAGS,

    _CS_XBS5_ILP32_OFF32_LIBS,

    _CS_XBS5_ILP32_OFF32_LINTFLAGS,

    _CS_XBS5_ILP32_OFFBIG_CFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LDFLAGS,

    _CS_XBS5_ILP32_OFFBIG_LIBS,

    _CS_XBS5_ILP32_OFFBIG_LINTFLAGS,

    _CS_XBS5_LP64_OFF64_CFLAGS,

    _CS_XBS5_LP64_OFF64_LDFLAGS,

    _CS_XBS5_LP64_OFF64_LIBS,

    _CS_XBS5_LP64_OFF64_LINTFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_CFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LDFLAGS,

    _CS_XBS5_LPBIG_OFFBIG_LIBS,

    _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V6_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFF32_LIBS,

    _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V6_LP64_OFF64_CFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V6_LP64_OFF64_LIBS,

    _CS_POSIX_V6_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS,


    _CS_POSIX_V7_ILP32_OFF32_CFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFF32_LIBS,

    _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_ILP32_OFFBIG_LIBS,

    _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS,

    _CS_POSIX_V7_LP64_OFF64_CFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LDFLAGS,

    _CS_POSIX_V7_LP64_OFF64_LIBS,

    _CS_POSIX_V7_LP64_OFF64_LINTFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LIBS,

    _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS,


    _CS_V6_ENV,

    _CS_V7_ENV

  };
# 610 "/usr/include/unistd.h" 2 3 4


extern long int pathconf (const char *__path, int __name)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));


extern long int fpathconf (int __fd, int __name) __attribute__ ((__nothrow__ , __leaf__));


extern long int sysconf (int __name) __attribute__ ((__nothrow__ , __leaf__));



extern size_t confstr (int __name, char *__buf, size_t __len) __attribute__ ((__nothrow__ , __leaf__));




extern __pid_t getpid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t getppid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t getpgrp (void) __attribute__ ((__nothrow__ , __leaf__));


extern __pid_t __getpgid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));

extern __pid_t getpgid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));






extern int setpgid (__pid_t __pid, __pid_t __pgid) __attribute__ ((__nothrow__ , __leaf__));
# 660 "/usr/include/unistd.h" 3 4
extern int setpgrp (void) __attribute__ ((__nothrow__ , __leaf__));






extern __pid_t setsid (void) __attribute__ ((__nothrow__ , __leaf__));



extern __pid_t getsid (__pid_t __pid) __attribute__ ((__nothrow__ , __leaf__));



extern __uid_t getuid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __uid_t geteuid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __gid_t getgid (void) __attribute__ ((__nothrow__ , __leaf__));


extern __gid_t getegid (void) __attribute__ ((__nothrow__ , __leaf__));




extern int getgroups (int __size, __gid_t __list[]) __attribute__ ((__nothrow__ , __leaf__)) ;
# 700 "/usr/include/unistd.h" 3 4
extern int setuid (__uid_t __uid) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int setreuid (__uid_t __ruid, __uid_t __euid) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int seteuid (__uid_t __uid) __attribute__ ((__nothrow__ , __leaf__)) ;






extern int setgid (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int setregid (__gid_t __rgid, __gid_t __egid) __attribute__ ((__nothrow__ , __leaf__)) ;




extern int setegid (__gid_t __gid) __attribute__ ((__nothrow__ , __leaf__)) ;
# 756 "/usr/include/unistd.h" 3 4
extern __pid_t fork (void) __attribute__ ((__nothrow__));







extern __pid_t vfork (void) __attribute__ ((__nothrow__ , __leaf__));





extern char *ttyname (int __fd) __attribute__ ((__nothrow__ , __leaf__));



extern int ttyname_r (int __fd, char *__buf, size_t __buflen)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2))) ;



extern int isatty (int __fd) __attribute__ ((__nothrow__ , __leaf__));




extern int ttyslot (void) __attribute__ ((__nothrow__ , __leaf__));




extern int link (const char *__from, const char *__to)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) ;




extern int linkat (int __fromfd, const char *__from, int __tofd,
     const char *__to, int __flags)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 4))) ;




extern int symlink (const char *__from, const char *__to)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) ;




extern ssize_t readlink (const char *__restrict __path,
    char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2))) ;




extern int symlinkat (const char *__from, int __tofd,
        const char *__to) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 3))) ;


extern ssize_t readlinkat (int __fd, const char *__restrict __path,
      char *__restrict __buf, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3))) ;



extern int unlink (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern int unlinkat (int __fd, const char *__name, int __flag)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2)));



extern int rmdir (const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));



extern __pid_t tcgetpgrp (int __fd) __attribute__ ((__nothrow__ , __leaf__));


extern int tcsetpgrp (int __fd, __pid_t __pgrp_id) __attribute__ ((__nothrow__ , __leaf__));






extern char *getlogin (void);







extern int getlogin_r (char *__name, size_t __name_len) __attribute__ ((__nonnull__ (1)));




extern int setlogin (const char *__name) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));







# 1 "/usr/include/arm-linux-gnueabihf/bits/getopt_posix.h" 1 3 4
# 27 "/usr/include/arm-linux-gnueabihf/bits/getopt_posix.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/getopt_core.h" 1 3 4
# 28 "/usr/include/arm-linux-gnueabihf/bits/getopt_core.h" 3 4








extern char *optarg;
# 50 "/usr/include/arm-linux-gnueabihf/bits/getopt_core.h" 3 4
extern int optind;




extern int opterr;



extern int optopt;
# 91 "/usr/include/arm-linux-gnueabihf/bits/getopt_core.h" 3 4
extern int getopt (int ___argc, char *const *___argv, const char *__shortopts)
       __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (2, 3)));


# 28 "/usr/include/arm-linux-gnueabihf/bits/getopt_posix.h" 2 3 4


# 49 "/usr/include/arm-linux-gnueabihf/bits/getopt_posix.h" 3 4

# 870 "/usr/include/unistd.h" 2 3 4







extern int gethostname (char *__name, size_t __len) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));






extern int sethostname (const char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern int sethostid (long int __id) __attribute__ ((__nothrow__ , __leaf__)) ;





extern int getdomainname (char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
extern int setdomainname (const char *__name, size_t __len)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;





extern int vhangup (void) __attribute__ ((__nothrow__ , __leaf__));


extern int revoke (const char *__file) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;







extern int profil (unsigned short int *__sample_buffer, size_t __size,
     size_t __offset, unsigned int __scale)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1)));





extern int acct (const char *__name) __attribute__ ((__nothrow__ , __leaf__));



extern char *getusershell (void) __attribute__ ((__nothrow__ , __leaf__));
extern void endusershell (void) __attribute__ ((__nothrow__ , __leaf__));
extern void setusershell (void) __attribute__ ((__nothrow__ , __leaf__));





extern int daemon (int __nochdir, int __noclose) __attribute__ ((__nothrow__ , __leaf__)) ;






extern int chroot (const char *__path) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;



extern char *getpass (const char *__prompt) __attribute__ ((__nonnull__ (1)));







extern int fsync (int __fd);
# 967 "/usr/include/unistd.h" 3 4
extern long int gethostid (void);


extern void sync (void) __attribute__ ((__nothrow__ , __leaf__));





extern int getpagesize (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));




extern int getdtablesize (void) __attribute__ ((__nothrow__ , __leaf__));
# 991 "/usr/include/unistd.h" 3 4
extern int truncate (const char *__file, __off_t __length)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1))) ;
# 1014 "/usr/include/unistd.h" 3 4
extern int ftruncate (int __fd, __off_t __length) __attribute__ ((__nothrow__ , __leaf__)) ;
# 1035 "/usr/include/unistd.h" 3 4
extern int brk (void *__addr) __attribute__ ((__nothrow__ , __leaf__)) ;





extern void *sbrk (intptr_t __delta) __attribute__ ((__nothrow__ , __leaf__));
# 1056 "/usr/include/unistd.h" 3 4
extern long int syscall (long int __sysno, ...) __attribute__ ((__nothrow__ , __leaf__));
# 1079 "/usr/include/unistd.h" 3 4
extern int lockf (int __fd, int __cmd, __off_t __len) ;
# 1115 "/usr/include/unistd.h" 3 4
extern int fdatasync (int __fildes);
# 1124 "/usr/include/unistd.h" 3 4
extern char *crypt (const char *__key, const char *__salt)
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__nonnull__ (1, 2)));
# 1161 "/usr/include/unistd.h" 3 4
int getentropy (void *__buffer, size_t __length) ;








# 10 "demo.c" 2
# 1 "/usr/include/errno.h" 1 3 4
# 28 "/usr/include/errno.h" 3 4
# 1 "/usr/include/arm-linux-gnueabihf/bits/errno.h" 1 3 4
# 26 "/usr/include/arm-linux-gnueabihf/bits/errno.h" 3 4
# 1 "/usr/include/linux/errno.h" 1 3 4
# 1 "/usr/include/arm-linux-gnueabihf/asm/errno.h" 1 3 4
# 1 "/usr/include/asm-generic/errno.h" 1 3 4




# 1 "/usr/include/asm-generic/errno-base.h" 1 3 4
# 6 "/usr/include/asm-generic/errno.h" 2 3 4
# 1 "/usr/include/arm-linux-gnueabihf/asm/errno.h" 2 3 4
# 1 "/usr/include/linux/errno.h" 2 3 4
# 27 "/usr/include/arm-linux-gnueabihf/bits/errno.h" 2 3 4
# 29 "/usr/include/errno.h" 2 3 4








extern int *__errno_location (void) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__const__));
# 52 "/usr/include/errno.h" 3 4

# 11 "demo.c" 2
# 1 "include/qtts.h" 1
# 45 "include/qtts.h"
# 1 "include/msp_types.h" 1
# 28 "include/msp_types.h"

# 28 "include/msp_types.h"
enum
{
 MSP_AUDIO_SAMPLE_INIT = 0x00,
    MSP_AUDIO_SAMPLE_FIRST = 0x01,
    MSP_AUDIO_SAMPLE_CONTINUE = 0x02,
    MSP_AUDIO_SAMPLE_LAST = 0x04,
};
# 50 "include/msp_types.h"
enum
{
 MSP_REC_STATUS_SUCCESS = 0,
 MSP_REC_STATUS_NO_MATCH = 1,
 MSP_REC_STATUS_INCOMPLETE = 2,
 MSP_REC_STATUS_NON_SPEECH_DETECTED = 3,
 MSP_REC_STATUS_SPEECH_DETECTED = 4,
 MSP_REC_STATUS_COMPLETE = 5,
 MSP_REC_STATUS_MAX_CPU_TIME = 6,
 MSP_REC_STATUS_MAX_SPEECH = 7,
 MSP_REC_STATUS_STOPPED = 8,
 MSP_REC_STATUS_REJECTED = 9,
 MSP_REC_STATUS_NO_SPEECH_FOUND = 10,
 MSP_REC_STATUS_FAILURE = MSP_REC_STATUS_NO_MATCH,
};
# 75 "include/msp_types.h"
enum
{
 MSP_EP_LOOKING_FOR_SPEECH = 0,
 MSP_EP_IN_SPEECH = 1,
 MSP_EP_AFTER_SPEECH = 3,
 MSP_EP_TIMEOUT = 4,
 MSP_EP_ERROR = 5,
 MSP_EP_MAX_SPEECH = 6,
 MSP_EP_IDLE = 7
};


enum
{
    MSP_TTS_FLAG_STILL_HAVE_DATA = 1,
    MSP_TTS_FLAG_DATA_END = 2,
    MSP_TTS_FLAG_CMD_CANCELED = 4,
};


enum
{
 MSP_HCR_DATA_FIRST = 1,
 MSP_HCR_DATA_CONTINUE = 2,
 MSP_HCR_DATA_END = 4,
};


enum
{
 MSP_IVW_MSG_WAKEUP = 1,
 MSP_IVW_MSG_ERROR = 2,
 MSP_IVW_MSG_ISR_RESULT = 3,
 MSP_IVW_MSG_ISR_EPS = 4,
 MSP_IVW_MSG_VOLUME = 5,
 MSP_IVW_MSG_ENROLL = 6,
 MSP_IVW_MSG_RESET = 7
};


enum
{
 MSP_DATA_SAMPLE_INIT = 0x00,
 MSP_DATA_SAMPLE_FIRST = 0x01,
 MSP_DATA_SAMPLE_CONTINUE = 0x02,
 MSP_DATA_SAMPLE_LAST = 0x04,
};
# 46 "include/qtts.h" 2
# 58 "include/qtts.h"
const char* QTTSSessionBegin(const char* params, int* errorCode);
typedef const char* ( *Proc_QTTSSessionBegin)(const char* params, int* errorCode);
# 77 "include/qtts.h"
int QTTSTextPut(const char* sessionID, const char* textString, unsigned int textLen, const char* params);
typedef int ( *Proc_QTTSTextPut)(const char* sessionID, const char* textString, unsigned int textLen, const char* params);
# 97 "include/qtts.h"
const void* QTTSAudioGet(const char* sessionID, unsigned int* audioLen, int* synthStatus, int* errorCode);
typedef const void* ( *Proc_QTTSAudioGet)(const char* sessionID, unsigned int* audioLen, int* synthStatus, int* errorCode);
# 114 "include/qtts.h"
const char* QTTSAudioInfo(const char* sessionID);
typedef const char* ( *Proc_QTTSAudioInfo)(const char* sessionID);
# 132 "include/qtts.h"
int QTTSSessionEnd(const char* sessionID, const char* hints);
typedef int ( *Proc_QTTSSessionEnd)(const char* sessionID, const char* hints);
# 152 "include/qtts.h"
int QTTSGetParam(const char* sessionID, const char* paramName, char* paramValue, unsigned int* valueLen);
typedef int ( *Proc_QTTSGetParam)(const char* sessionID, const char* paramName, char* paramValue, unsigned int* valueLen);
# 171 "include/qtts.h"
int QTTSSetParam(const char *sessionID, const char *paramName, const char *paramValue);
typedef int ( *Proc_QTTSSetParam)(const char* sessionID, const char* paramName, char* paramValue);





typedef void ( *tts_result_ntf_handler)( const char *sessionID, const char *audio, int audioLen, int synthStatus, int ced, const char *audioInfo, int audioInfoLen, void *userData );
typedef void ( *tts_status_ntf_handler)( const char *sessionID, int type, int status, int param1, const void *param2, void *userData);
typedef void ( *tts_error_ntf_handler)(const char *sessionID, int errorCode, const char *detail, void *userData);
int QTTSRegisterNotify(const char *sessionID, tts_result_ntf_handler rsltCb, tts_status_ntf_handler statusCb, tts_error_ntf_handler errCb, void *userData);
# 12 "demo.c" 2
# 1 "include/msp_cmn.h" 1
# 50 "include/msp_cmn.h"
char *Wchar2Mbytes(const wchar_t* wcstr);
# 64 "include/msp_cmn.h"
wchar_t *Mbytes2Wchar(const char *mbstr);
# 80 "include/msp_cmn.h"
int MSPLogin(const char* usr, const char* pwd, const char* params);
typedef int ( *Proc_MSPLogin)(const char* usr, const char* pwd, const char* params);

int MSPLoginW(const wchar_t* usr, const wchar_t* pwd, const wchar_t* params);
typedef int ( *Proc_MSPLoginW)(const wchar_t* usr, const wchar_t* pwd, const wchar_t* params);
# 95 "include/msp_cmn.h"
int MSPLogout();
typedef int ( *Proc_MSPLogout)();

int MSPLogoutW();
typedef int ( *Proc_MSPLogoutW)();
# 113 "include/msp_cmn.h"
int MSPUpload( const char* dataName, const char* params, const char* dataID);
typedef int (* Proc_MSPUpload)( const char* dataName, const char* params, const char* dataID);
# 126 "include/msp_cmn.h"
typedef int (*DownloadStatusCB)(int errorCode, long param1, const void *param2, void *userData);
typedef int (*DownloadResultCB)(const void *data, long dataLen, void *userData);
int MSPDownload(const char* dataName, const char* params, DownloadStatusCB statusCb, DownloadResultCB resultCb, void*userData);
typedef int (* Proc_MSPDownload)(const char* dataName, const char* params, DownloadStatusCB statusCb, DownloadResultCB resultCb, void*userData);
int MSPDownloadW(const wchar_t* wdataName, const wchar_t* wparams, DownloadStatusCB statusCb, DownloadResultCB resultCb, void*userData);
typedef int (* Proc_MSPDownloadW) (const wchar_t* wdataName, const wchar_t* wparams, DownloadStatusCB statusCb, DownloadResultCB resultCb, void*userData);
# 145 "include/msp_cmn.h"
int MSPAppendData(void* data, unsigned int dataLen, unsigned int dataStatus);
typedef int (* Proc_MSPAppendData)(void* data, unsigned int dataLen, unsigned int dataStatus);
# 160 "include/msp_cmn.h"
const char* MSPGetResult(unsigned int* rsltLen, int* rsltStatus, int *errorCode);
typedef const char * ( *Proc_MSPGetResult)(unsigned int* rsltLen, int* rsltStatus, int *errorCode);
# 174 "include/msp_cmn.h"
int MSPSetParam( const char* paramName, const char* paramValue );
typedef int ( *Proc_MSPSetParam)(const char* paramName, const char* paramValue);
# 189 "include/msp_cmn.h"
int MSPGetParam( const char *paramName, char *paramValue, unsigned int *valueLen );
typedef int ( *Proc_MSPGetParam)( const char *paramName, char *paramValue, unsigned int *valueLen );
# 206 "include/msp_cmn.h"
const char* MSPUploadData(const char* dataName, void* data, unsigned int dataLen, const char* params, int* errorCode);
typedef const char* (* Proc_MSPUploadData)(const char* dataName, void* data, unsigned int dataLen, const char* params, int* errorCode);
# 221 "include/msp_cmn.h"
const void* MSPDownloadData(const char* params, unsigned int* dataLen, int* errorCode);
typedef const void* (* Proc_MSPDownloadData)(const char* params, unsigned int* dataLen, int* errorCode);

const void* MSPDownloadDataW(const wchar_t* params, unsigned int* dataLen, int* errorCode);
typedef const void* (* Proc_MSPDownloadDataW)(const wchar_t* params, unsigned int* dataLen, int* errorCode);
# 239 "include/msp_cmn.h"
const char* MSPSearch(const char* params, const char* text, unsigned int* dataLen, int* errorCode);
typedef const char* (* Proc_MSPSearch)(const char* params, const char* text, unsigned int* dataLen, int* errorCode);



typedef int (*NLPSearchCB)(const char *sessionID, int errorCode, int status, const void* result, long rsltLen, void *userData);
const char* MSPNlpSearch(const char* params, const char* text, unsigned int textLen, int *errorCode, NLPSearchCB callback, void *userData);
typedef const char* (* Proc_MSPNlpSearch)(const char* params, const char* text, unsigned int textLen, int *errorCode, NLPSearchCB callback, void *userData);
int MSPNlpSchCancel(const char *sessionID, const char *hints);
# 260 "include/msp_cmn.h"
typedef void ( *msp_status_ntf_handler)( int type, int status, int param1, const void *param2, void *userData );
int MSPRegisterNotify( msp_status_ntf_handler statusCb, void *userData );
typedef const char* (* Proc_MSPRegisterNotify)( msp_status_ntf_handler statusCb, void *userData );
# 275 "include/msp_cmn.h"
const char* MSPGetVersion(const char *verName, int *errorCode);
typedef const char* ( * Proc_MSPGetVersion)(const char *verName, int *errorCode);
# 13 "demo.c" 2
# 1 "include/msp_errors.h" 1





enum
{
 MSP_SUCCESS = 0,
 MSP_ERROR_FAIL = -1,
 MSP_ERROR_EXCEPTION = -2,


 MSP_ERROR_GENERAL = 10100,
 MSP_ERROR_OUT_OF_MEMORY = 10101,
 MSP_ERROR_FILE_NOT_FOUND = 10102,
 MSP_ERROR_NOT_SUPPORT = 10103,
 MSP_ERROR_NOT_IMPLEMENT = 10104,
 MSP_ERROR_ACCESS = 10105,
 MSP_ERROR_INVALID_PARA = 10106,
 MSP_ERROR_INVALID_PARA_VALUE = 10107,
 MSP_ERROR_INVALID_HANDLE = 10108,
 MSP_ERROR_INVALID_DATA = 10109,
 MSP_ERROR_NO_LICENSE = 10110,
 MSP_ERROR_NOT_INIT = 10111,
 MSP_ERROR_NULL_HANDLE = 10112,
    MSP_ERROR_OVERFLOW = 10113,

 MSP_ERROR_TIME_OUT = 10114,
 MSP_ERROR_OPEN_FILE = 10115,
 MSP_ERROR_NOT_FOUND = 10116,
 MSP_ERROR_NO_ENOUGH_BUFFER = 10117,
 MSP_ERROR_NO_DATA = 10118,
 MSP_ERROR_NO_MORE_DATA = 10119,
 MSP_ERROR_NO_RESPONSE_DATA = 10120,
 MSP_ERROR_ALREADY_EXIST = 10121,
 MSP_ERROR_LOAD_MODULE = 10122,
 MSP_ERROR_BUSY = 10123,
 MSP_ERROR_INVALID_CONFIG = 10124,
 MSP_ERROR_VERSION_CHECK = 10125,
 MSP_ERROR_CANCELED = 10126,
 MSP_ERROR_INVALID_MEDIA_TYPE = 10127,
 MSP_ERROR_CONFIG_INITIALIZE = 10128,
 MSP_ERROR_CREATE_HANDLE = 10129,
 MSP_ERROR_CODING_LIB_NOT_LOAD = 10130,
 MSP_ERROR_USER_CANCELLED = 10131,
 MSP_ERROR_INVALID_OPERATION = 10132,
 MSP_ERROR_MESSAGE_NOT_COMPLETE = 10133,
 MSP_ERROR_NO_EID = 10134,
 MSP_ERROE_OVER_REQ = 10135,
 MSP_ERROR_USER_ACTIVE_ABORT = 10136,
 MSP_ERROR_BUSY_GRMBUILDING = 10137,
 MSP_ERROR_BUSY_LEXUPDATING = 10138,
 MSP_ERROR_SESSION_RESET = 10139,
 MSP_ERROR_BOS_TIMEOUT = 10140,
 MSP_ERROR_STREAM_FILTER = 10141,
 MSP_ERROR_STREAM_CLEAR = 10142,


 MSP_ERROR_NET_GENERAL = 10200,
 MSP_ERROR_NET_OPENSOCK = 10201,
 MSP_ERROR_NET_CONNECTSOCK = 10202,
 MSP_ERROR_NET_ACCEPTSOCK = 10203,
 MSP_ERROR_NET_SENDSOCK = 10204,
 MSP_ERROR_NET_RECVSOCK = 10205,
 MSP_ERROR_NET_INVALIDSOCK = 10206,
 MSP_ERROR_NET_BADADDRESS = 10207,
 MSP_ERROR_NET_BINDSEQUENCE = 10208,
 MSP_ERROR_NET_NOTOPENSOCK = 10209,
 MSP_ERROR_NET_NOTBIND = 10210,
 MSP_ERROR_NET_NOTLISTEN = 10211,
 MSP_ERROR_NET_CONNECTCLOSE = 10212,
 MSP_ERROR_NET_NOTDGRAMSOCK = 10213,
 MSP_ERROR_NET_DNS = 10214,
 MSP_ERROR_NET_INIT = 10215,


 MSP_ERROR_NFL_INNER_ERROR = 10216,
 MSP_ERROR_MSS_TIME_OUT = 10217,
 MSP_ERROT_CLIENT_TIME_OUT = 10218,
 MSP_ERROR_CLIENT_CLOSE = 10219,

 MSP_ERROR_CLIENT_AREA_CHANGE = 10220,
 MSP_ERROR_NET_SSL_HANDSHAKE = 10221,
 MSP_ERROR_NET_INVALID_ROOT_CERT = 10222,
 MSP_ERROR_NET_INVALID_CLIENT_CERT = 10223,
 MSP_ERROR_NET_INVALID_SERVER_CERT = 10224,
 MSP_ERROR_NET_INVALID_KEY = 10225,
 MSP_ERROR_NET_CERT_VERIFY_FAILED = 10226,
 MSP_ERROR_NET_WOULDBLOCK = 10227,
 MSP_ERROR_NET_NOTBLOCK = 10228,


 MSP_ERROR_MSG_GENERAL = 10300,
 MSP_ERROR_MSG_PARSE_ERROR = 10301,
 MSP_ERROR_MSG_BUILD_ERROR = 10302,
 MSP_ERROR_MSG_PARAM_ERROR = 10303,
 MSP_ERROR_MSG_CONTENT_EMPTY = 10304,
 MSP_ERROR_MSG_INVALID_CONTENT_TYPE = 10305,
 MSP_ERROR_MSG_INVALID_CONTENT_LENGTH = 10306,
 MSP_ERROR_MSG_INVALID_CONTENT_ENCODE = 10307,
 MSP_ERROR_MSG_INVALID_KEY = 10308,
 MSP_ERROR_MSG_KEY_EMPTY = 10309,
 MSP_ERROR_MSG_SESSION_ID_EMPTY = 10310,
 MSP_ERROR_MSG_LOGIN_ID_EMPTY = 10311,
 MSP_ERROR_MSG_SYNC_ID_EMPTY = 10312,
 MSP_ERROR_MSG_APP_ID_EMPTY = 10313,
 MSP_ERROR_MSG_EXTERN_ID_EMPTY = 10314,
 MSP_ERROR_MSG_INVALID_CMD = 10315,
 MSP_ERROR_MSG_INVALID_SUBJECT = 10316,
 MSP_ERROR_MSG_INVALID_VERSION = 10317,
 MSP_ERROR_MSG_NO_CMD = 10318,
 MSP_ERROR_MSG_NO_SUBJECT = 10319,
 MSP_ERROR_MSG_NO_VERSION = 10320,
 MSP_ERROR_MSG_MSSP_EMPTY = 10321,
 MSP_ERROR_MSG_NEW_RESPONSE = 10322,
 MSP_ERROR_MSG_NEW_CONTENT = 10323,
 MSP_ERROR_MSG_INVALID_SESSION_ID = 10324,
 MSP_ERROR_MSG_INVALID_CONTENT = 10325,


 MSP_ERROR_DB_GENERAL = 10400,
 MSP_ERROR_DB_EXCEPTION = 10401,
 MSP_ERROR_DB_NO_RESULT = 10402,
 MSP_ERROR_DB_INVALID_USER = 10403,
 MSP_ERROR_DB_INVALID_PWD = 10404,
 MSP_ERROR_DB_CONNECT = 10405,
 MSP_ERROR_DB_INVALID_SQL = 10406,
 MSP_ERROR_DB_INVALID_APPID = 10407,
 MSP_ERROR_DB_NO_UID = 10408,


 MSP_ERROR_RES_GENERAL = 10500,
 MSP_ERROR_RES_LOAD = 10501,
 MSP_ERROR_RES_FREE = 10502,
 MSP_ERROR_RES_MISSING = 10503,
 MSP_ERROR_RES_INVALID_NAME = 10504,
 MSP_ERROR_RES_INVALID_ID = 10505,
 MSP_ERROR_RES_INVALID_IMG = 10506,
 MSP_ERROR_RES_WRITE = 10507,
 MSP_ERROR_RES_LEAK = 10508,
 MSP_ERROR_RES_HEAD = 10509,
 MSP_ERROR_RES_DATA = 10510,
 MSP_ERROR_RES_SKIP = 10511,


 MSP_ERROR_TTS_GENERAL = 10600,
 MSP_ERROR_TTS_TEXTEND = 10601,
 MSP_ERROR_TTS_TEXT_EMPTY = 10602,
 MSP_ERROR_TTS_LTTS_ERROR = 10603,


 MSP_ERROR_REC_GENERAL = 10700,
 MSP_ERROR_REC_INACTIVE = 10701,
 MSP_ERROR_REC_GRAMMAR_ERROR = 10702,
 MSP_ERROR_REC_NO_ACTIVE_GRAMMARS = 10703,
 MSP_ERROR_REC_DUPLICATE_GRAMMAR = 10704,
 MSP_ERROR_REC_INVALID_MEDIA_TYPE = 10705,
 MSP_ERROR_REC_INVALID_LANGUAGE = 10706,
 MSP_ERROR_REC_URI_NOT_FOUND = 10707,
 MSP_ERROR_REC_URI_TIMEOUT = 10708,
 MSP_ERROR_REC_URI_FETCH_ERROR = 10709,
 MSP_ERROR_REC_PROC_MOD = 10710,



 MSP_ERROR_EP_GENERAL = 10800,
 MSP_ERROR_EP_NO_SESSION_NAME = 10801,
 MSP_ERROR_EP_INACTIVE = 10802,
 MSP_ERROR_EP_INITIALIZED = 10803,


 MSP_ERROR_TUV_GENERAL = 10900,
 MSP_ERROR_TUV_GETHIDPARAM = 10901,
 MSP_ERROR_TUV_TOKEN = 10902,
 MSP_ERROR_TUV_CFGFILE = 10903,
 MSP_ERROR_TUV_RECV_CONTENT = 10904,
 MSP_ERROR_TUV_VERFAIL = 10905,


 MSP_ERROR_LOGIN_SUCCESS = 11000,
 MSP_ERROR_LOGIN_NO_LICENSE = 11001,
 MSP_ERROR_LOGIN_SESSIONID_INVALID = 11002,
 MSP_ERROR_LOGIN_SESSIONID_ERROR = 11003,
 MSP_ERROR_LOGIN_UNLOGIN = 11004,
 MSP_ERROR_LOGIN_INVALID_USER = 11005,
 MSP_ERROR_LOGIN_INVALID_PWD = 11006,
 MSP_ERROR_LOGIN_SYSTEM_ERROR = 11099,


 MSP_ERROR_HCR_GENERAL = 11100,
 MSP_ERROR_HCR_RESOURCE_NOT_EXIST = 11101,
 MSP_ERROR_HCR_CREATE = 11102,
 MSP_ERROR_HCR_DESTROY = 11103,
 MSP_ERROR_HCR_START = 11104,
 MSP_ERROR_HCR_APPEND_STROKES = 11105,
 MSP_ERROR_HCR_INIT = 11106,
 MSP_ERROR_HCR_POINT_DECODE = 11107,
 MSP_ERROR_HCR_DISPATCH = 11108,
 MSP_ERROR_HCR_GETRESULT = 11109,
 MSP_ERROR_HCR_RESOURCE = 11110,


 MSP_ERROR_AUTH_NO_LICENSE = 11200,
 MSP_ERROR_AUTH_NO_ENOUGH_LICENSE = 11201,
 MSP_ERROR_AUTH_INVALID_LICENSE = 11202,
 MSP_ERROR_AUTH_LICENSE_EXPIRED = 11203,
 MSP_ERROR_AUTH_NEED_MORE_DATA = 11204,
 MSP_ERROR_AUTH_LICENSE_TO_BE_EXPIRED = 11205,
 MSP_ERROR_AUTH_INVALID_MACHINE_ID = 11206,
 MSP_ERROR_AUTH_LOCAL_ASR_FORBIDDEN = 11207,
 MSP_ERROR_AUTH_LOCAL_TTS_FORBIDDEN = 11208,
 MSP_ERROR_AUTH_LOCAL_IVW_FORBIDDEN = 11209,
 MSP_ERROR_AUTH_APPID_NOT_MATCH = 11210,
 MSP_ERROR_AUTH_UID_NOT_MATCH = 11211,
 MSP_ERROR_AUTH_TRIAL_EXPIRED = 11212,
 MSP_ERROR_AUTH_LOCAL_IFD_FORBIDDEN = 11213,

 MSP_ERROR_AIUI_NO_ENOUGH_LICENSE = 11216,

 MSP_ERROR_AUTH_DVC_NO_LICENSE = 11300,
 MSP_ERROR_AUTH_DVC_NO_ENOUGH_LICENSE = 11301,
 MSP_ERROR_AUTH_DVC_INVALID_LICENSE = 11302,
 MSP_ERROR_AUTH_DVC_LICENSE_EXPIRED = 11303,
 MSP_ERROR_AUTH_DVC_NEED_MORE_DATA = 11304,
 MSP_ERROR_AUTH_DVC_LICENSE_TO_BE_EXPIRED = 11305,
 MSP_ERROR_AUTH_DVC_EXCEED_LICENSE = 11306,



 MSP_ERROR_ASE_EXCEP_SILENCE = 11401,
 MSP_ERROR_ASE_EXCEP_SNRATIO = 11402,
 MSP_ERROR_ASE_EXCEP_PAPERDATA = 11403,
 MSP_ERROR_ASE_EXCEP_PAPERCONTENTS = 11404,
 MSP_ERROR_ASE_EXCEP_NOTMONO = 11405,
 MSP_ERROR_ASE_EXCEP_OTHERS = 11406,
 MSP_ERROR_ASE_EXCEP_PAPERFMT = 11407,
 MSP_ERROR_ASE_EXCEP_ULISTWORD = 11408,


 MSP_ERROR_IOT_BASE = 11500,
 MSP_ERROR_IOT_PARAM_ERROR = 11501,
 MSP_ERROR_IOT_INVALID_SERVICE = 11502,
 MSP_ERROR_IOT_INVALID_PRODUCTID = 11503,
 MSP_EEROR_IOT_INVALID_ATTR = 11504,
 MSP_ERROR_IOT_INVALID_PLATFORM = 11505,
 MSP_ERROR_IOT_DID_NOT_FOUND = 11506,


    MSP_ERROR_IVP_GENERAL = 11600,
    MSP_ERROR_IVP_EXTRA_RGN_SOPPORT = 11601,
    MSP_ERROR_IVP_TRUNCATED = 11602,
    MSP_ERROR_IVP_MUCH_NOISE = 11603,
    MSP_ERROR_IVP_TOO_LOW = 11604,
    MSP_ERROR_IVP_ZERO_AUDIO = 11605,
    MSP_ERROR_IVP_UTTER_TOO_SHORT = 11606,
    MSP_ERROR_IVP_TEXT_NOT_MATCH = 11607,

    MSP_ERROR_IVP_NO_ENOUGH_AUDIO = 11608,
    MSP_ERROR_IVP_MODEL_NOT_FOUND_IN_HBASE = 11610,



 MSP_ERROR_IFR_NOT_FACE_IMAGE = 11700,
 MSP_ERROR_FACE_IMAGE_FULL_LEFT = 11701,
 MSP_ERROR_FACE_IMAGE_FULL_RIGHT = 11702,
 MSP_ERROR_IMAGE_CLOCKWISE_WHIRL = 11703,
 MSP_ERROR_IMAGE_COUNTET_CLOCKWISE_WHIRL = 11704,
 MSP_ERROR_VALID_IMAGE_SIZE = 11705,
 MSP_ERROR_ILLUMINATION = 11706,
 MSP_ERROR_FACE_OCCULTATION = 11707,
 MSP_ERROR_FACE_INVALID_MODEL = 11708,
 MSP_ERROR_FUSION_INVALID_INPUT_TYPE = 11709,
 MSP_ERROR_FUSION_NO_ENOUGH_DATA = 11710,
 MSP_ERROR_FUSION_ENOUGH_DATA = 11711,


 MSP_ERROR_AIUI_CID_EXPIRED = 11800,


 MSP_ERROR_ICT_ENCODER = 11900,


 MSP_ERROR_HTTP_BASE = 12000,
 MSP_ERROR_HTTP_400 = 12400,
 MSP_ERROR_HTTP_401 = 12401,
 MSP_ERROR_HTTP_402 = 12402,
 MSP_ERROR_HTTP_403 = 12403,
 MSP_ERROR_HTTP_404 = 12404,
 MSP_ERROR_HTTP_405 = 12405,
 MSP_ERROR_HTTP_406 = 12406,
 MSP_ERROR_HTTP_407 = 12407,
 MSP_ERROR_HTTP_408 = 12408,
 MSP_ERROR_HTTP_409 = 12409,
 MSP_ERROR_HTTP_410 = 12410,
 MSP_ERROR_HTTP_411 = 12411,
 MSP_ERROR_HTTP_412 = 12412,
 MSP_ERROR_HTTP_413 = 12413,
 MSP_ERROR_HTTP_414 = 12414,
 MSP_ERROR_HTTP_415 = 12415,
 MSP_ERROR_HTTP_416 = 12416,
 MSP_ERROR_HTTP_417 = 12417,
 MSP_ERROR_HTTP_500 = 12500,
 MSP_ERROR_HTTP_501 = 12501,
 MSP_ERROR_HTTP_502 = 12502,
 MSP_ERROR_HTTP_503 = 12503,
 MSP_ERROR_HTTP_504 = 12504,
 MSP_ERROR_HTTP_505 = 12505,

 MSP_ERROR_ISV_NO_USER = 13000,


 MSP_ERROR_LUA_BASE = 14000,
 MSP_ERROR_LUA_YIELD = 14001,
 MSP_ERROR_LUA_ERRRUN = 14002,
 MSP_ERROR_LUA_ERRSYNTAX = 14003,
 MSP_ERROR_LUA_ERRMEM = 14004,
 MSP_ERROR_LUA_ERRERR = 14005,
 MSP_ERROR_LUA_INVALID_PARAM = 14006,


 MSP_ERROR_MMP_BASE = 15000,
 MSP_ERROR_MMP_MYSQL_INITFAIL = 15001,
 MSP_ERROR_MMP_REDIS_INITFAIL = 15002,
 MSP_ERROR_MMP_NETDSS_INITFAIL = 15003,
 MSP_ERROR_MMP_TAIR_INITFAIL = 15004,
 MSP_ERROR_MMP_MAIL_SESSION_FAIL = 15006,
 MSP_ERROR_MMP_MAIL_LOGON_FAIL = 15007,
 MSP_ERROR_MMP_MAIL_USER_ILLEGAL = 15008,
 MSP_ERROR_MMP_MAIL_PWD_ERR = 15009,
 MSP_ERROR_MMP_MAIL_SOCKET_ERR = 15010,
 MSP_ERROR_MMP_MAIL_INIT_FAIL = 15011,
 MSP_ERROR_MMP_STORE_MNR_NO_INIT = 15012,
 MSP_ERROR_MMP_STORE_MNR_POOL_FULL = 15013,
 MSP_ERROR_MMP_STRATGY_PARAM_ILLEGAL = 15014,
 MSP_ERROR_MMP_STRATGY_PARAM_TOOLOOG = 15015,
 MSP_ERROR_MMP_PARAM_NULL = 15016,
 MSP_ERROR_MMP_ERR_MORE_TOTAL = 15017,
 MSP_ERROR_MMP_PROC_THRESHOLD = 15018,
 MSP_ERROR_MMP_SERVER_THRESHOLD = 15019,
 MSP_ERROR_MMP_PYTHON_NO_EXIST = 15020,
 MSP_ERROR_MMP_PYTHON_IMPORT_FAILED = 15021,
 MSP_ERROR_MMP_PYTHON_BAD_FUNC = 15022,
 MSP_ERROR_MMP_DB_DATA_ILLEGAL = 15023,
 MSP_ERROR_MMP_REDIS_NOT_CONN = 15024,
 MSP_ERROR_MMP_PMA_NOT_FOUND_STRATEGY = 15025,
 MSP_ERROR_MMP_TAIR_CONNECT = 15026,
 MSP_ERROR_MMP_PMC_SERVINFO_INVALID = 15027,
 MSP_ERROR_MMP_ALARM_GROUP_NULL = 15028,
 MSP_ERROR_MMP_ALARM_CONTXT_NULL = 15029,


 MSP_ERROR_LMOD_BASE = 16000,
 MSP_ERROR_LMOD_NOT_FOUND = 16001,
 MSP_ERROR_LMOD_UNEXPECTED_BIN = 16002,
 MSP_ERROR_LMOD_LOADCODE = 16003,
 MSP_ERROR_LMOD_PRECALL = 16004,
 MSP_ERROR_LMOD_RUNTIME_EXCEPTION = 16005,
 MSP_ERROR_LMOD_ALREADY_LOADED = 16006,


 MSP_ERROR_BIZ_BASE = 17000,


 MSP_ERROR_NGX_LOG_MORE_TOTEL_SIZE = 18000,


 MSP_ERROR_FLASH_NETWORK_CONNECT_FIALED = 19000,
 MSP_ERROR_FLASH_NETWORK_CHECK_FIALED = 19001,
 MSP_ERROR_FLASH_NETWORK_CHECK_TIMEOUT = 19002,
 MSP_ERROR_FLASH_NETWORK_CLOSED_EXCEPTION = 19003,



 SPEECH_ERROR_NO_NETWORK = 20001,
 SPEECH_ERROR_NETWORK_TIMEOUT = 20002,
 SPEECH_ERROR_NET_EXPECTION = 20003,
 SPEECH_ERROR_INVALID_RESULT = 20004,
 SPEECH_ERROR_NO_MATCH = 20005,
 SPEECH_ERROR_AUDIO_RECORD = 20006,
 SPEECH_ERROR_NO_SPPECH = 20007,

 SPEECH_ERROR_SPEECH_TIMEOUT = 20008,
 SPEECH_ERROR_EMPTY_UTTERANCE = 20009,
 SPEECH_ERROR_FILE_ACCESS = 20010,
 SPEECH_ERROR_PLAY_MEDIA = 20011,

 SPEECH_ERROR_INVALID_PARAM = 20012,
 SPEECH_ERROR_TEXT_OVERFLOW = 20013,
 SPEECH_ERROR_INVALID_DATA = 20014,
 SPEECH_ERROR_LOGIN = 20015,
 SPEECH_ERROR_PERMISSION_DENIED = 20016,
 SPEECH_ERROR_INTERRUPT = 20017,

    SPEECH_ERROR_VERSION_LOWER = 20018,
 SPEECH_CLIENT_ERROR_ISUSING = 20019,
 SPEECH_ERROR_SYSTEM_PREINSTALL = 20020,
 SPEECH_ERROR_UNSATISFIED_LINK = 20021,
    SPEECH_ERROR_UNKNOWN = 20999,


 SPEECH_ERROR_COMPONENT_NOT_INSTALLED = 21001,
 SPEECH_ERROR_ENGINE_NOT_SUPPORTED = 21002,
 SPEECH_ERROR_ENGINE_INIT_FAIL = 21003,
 SPEECH_ERROR_ENGINE_CALL_FAIL = 21004,
 SPEECH_ERROR_ENGINE_BUSY = 21005,

 SPEECH_ERROR_LOCAL_NO_INIT = 22001,
 SPEECH_ERROR_LOCAL_RESOURCE = 22002,
 SPEECH_ERROR_LOCAL_ENGINE = 22003,
 SPEECH_ERROR_IVW_INTERRUPT = 22004,







 SPEECH_SUCCESS = 0 ,

 SPEECH_ERROR_ASR_CLIENT = 23000,
 SPEECH_ERROR_ASR_INVALID_PARA = 23001,
 SPEECH_ERROR_ASR_INVALID_PARA_VALUE = 23002,
 SPEECH_ERROR_ASR_OUT_OF_MEMORY = 23003,
 SPEECH_ERROR_ASR_CREATE_HANDLE_FAILED = 23004,
 SPEECH_ERROR_ASR_ENGINE_INIT_FAILED = 23005,
 SPEECH_ERROR_ASR_ENGINE_STARTED = 23006,
 SPEECH_ERROR_ASR_ENGINE_UNINIT = 23007,
 SPEECH_ERROR_ASR_SPEECH_TIMEOUT = 23008,
 SPEECH_ERROR_ASR_NO_RECOGNIZED_RESULT = 23009,
 SPEECH_ERROR_ASR_INVALID_HANDLE = 23010,
 SPEECH_ERROR_ASR_FILE_ACCESS = 23011,


 SPEECH_ERROR_AITALK_FALSE = 23100,


 SPEECH_ERROR_AITALK_PERMISSION_DENIED = 23101,


 SPEECH_ERROR_AITALK_INVALID_PARA = 23102,
 SPEECH_ERROR_AITALK_BUFFER_OVERFLOW = 23103,
 SPEECH_ERROR_AITALK_FAILED = 23104,
 SPEECH_ERROR_AITALK_NOT_SUPPORTED = 23105,
 SPEECH_ERROR_AITALK_OUT_OF_MEMORY = 23106,
 SPEECH_ERROR_AITALK_INVALID_RESOURCE = 23107,
 SPEECH_ERROR_AITALK_NOT_FOUND = 23108,
 SPEECH_ERROR_AITALK_INVALID_GRAMMAR = 23109,


 SPEECH_ERROR_AITALK_INVALID_CALL = 23110,


 SPEECH_ERROR_AITALK_SYNTAX_ERROR = 23111,


 SPEECH_ERROR_AITALK_RESET = 23112,
 SPEECH_ERROR_AITALK_ENDED = 23113,
 SPEECH_ERROR_AITALK_IDLE = 23114,
 SPEECH_ERROR_AITALK_CANNOT_SAVE_FILE = 23115,


 SPEECH_ERROR_AITALK_INVALID_GRAMMAR_NAME = 23116,

 SPEECH_ERROR_AITALK_BUFFER_EMPTY = 23117,

 SPEECH_ERROR_AITALK_GET_RESULT = 23118,

 SPEECH_ERROR_AITALK_REACT_OUT_TIME = 23119,
 SPEECH_ERROR_AITALK_SPEECH_OUT_TIME = 23120,

 SPEECH_ERROR_AITALK_AUDIO_CUT = 23121,
 SPEECH_ERROR_AITALK_AUDIO_LOWER = 23122,

 SPEECH_ERROR_AITALK_INSUFFICIENT_PERMISSIONS = 23123,
 SPEECH_ERROR_AITALK_RESULT_ERROR = 23124,
 SPEECH_ERROR_AITALK_SHORT_PAUSE = 23125,
 SPEECH_ERROR_AITALK_BUSY = 23126,
 SPEECH_ERROR_AITALK_GRM_NOT_UPDATE = 23127,
 SPEECH_ERROR_AITALK_STARTED = 23128,
 SPEECH_ERROR_AITALK_STOPPED = 23129,
 SPEECH_ERROR_AITALK_ALREADY_STARTED = 23130,
 SPEECH_ERROR_AITALK_ALREADY_STOPPED = 23131,
 SPEECH_ERROR_AITALK_TOO_MANY_COMMAND = 23132,
 SPEECH_ERROR_AITALK_WAIT = 23133,
 SPEECH_ERROR_AITALK_MAE_RIGHT = 23134,
 SPEECH_ERROR_AITALK_MAE_WRONG = 23135,

 SPEECH_ERROR_AITALK_GRM_ERR = 23300,






 SPEECH_ERROR_TTS_INVALID_PARA = 24000,
 SPEECH_ERROR_TTS_INVALID_PARA_VALUE = 24001,
 SPEECH_ERROR_TTS_OUT_OF_MEMORY = 24002,
 SPEECH_ERROR_TTS_INVALID_HANDLE = 24003,
 SPEECH_ERROR_TTS_CREATE_HANDLE_FAILED = 24004,
 SPEECH_ERROR_TTS_INVALID_RESOURCE = 24005,
 SPEECH_ERROR_TTS_INVALID_VOICE_NAME = 24006,
 SPEECH_ERROR_TTS_ENGINE_UNINIT = 24007,
 SPEECH_ERROR_TTS_ENGINE_INIT_FAILED = 24008,
 SPEECH_ERROR_TTS_ENGINE_BUSY = 24009,



 SPEECH_ERROR_AISOUND_BASE = 24100,
 SPEECH_ERROR_AISOUND_UNIMPEMENTED = 24100,
 SPEECH_ERROR_AISOUND_UNSUPPORTED = 24101,
 SPEECH_ERROR_AISOUND_INVALID_HANDLE = 24102,
 SPEECH_ERROR_AISOUND_INVALID_PARA = 24103,
 SPEECH_ERROR_AISOUND_INSUFFICIENT_HEAP = 24104,
 SPEECH_ERROR_AISOUND_STATE_REFUSE = 24105,
 SPEECH_ERROR_AISOUND_INVALID_PARA_ID = 24106,
 SPEECH_ERROR_AISOUND_INVALID_PARA_VALUE = 24107,
 SPEECH_ERROR_AISOUND_RESOURCE = 24108,
 SPEECH_ERROR_AISOUND_RESOURCE_READ = 24109,
 SPEECH_ERROR_AISOUND_LBENDIAN = 24110,
 SPEECH_ERROR_AISOUND_HEADFILE = 24111,
 SPEECH_ERROR_AISOUND_BUFFER_OVERFLOW = 24112,
 SPEECH_ERROR_AISOUND_INVALID_ISAMPA = 24113,
 SPEECH_ERROR_AISOUND_INVALID_CSSML = 24114,





 SPEECH_ERROR_IVW_ENGINE_UNINI = 25000,
 SPEECH_ERROR_IVW_RESVER_NOMATCH = 25001,
 SPEECH_ERROR_IVW_BUFFERED_AUDIOD_LITTLE = 25002,
 SPEECH_ERROR_IVW_INVALID_RESTYPE = 25003,
 SPEECH_ERROR_IVW_INVALID_RESHEADVER = 25004,


 SPEECH_ERROR_IVW_INVALID_CALL = 25101,
    SPEECH_ERROR_IVW_INVALID_ARG = 25102,
    SPEECH_ERROR_IVW_TELL_SIZE = 25103,
    SPEECH_ERROR_IVW_OUT_OF_MEMORY = 25104,
    SPEECH_ERROR_IVW_OUT_BUFFER_FULL = 25105,
    SPEECH_ERROR_IVW_OUT_BUFFER_EMPTY = 25106,
 SPEECH_ERROR_IVW_INVALID_RESOURCE = 25107,
    SPEECH_ERROR_IVW_REPETITIOPN_ENTER = 25108,
    SPEECH_ERROR_IVW_NOT_SUPPORT = 25109,
    SPEECH_ERROR_IVW_NOT_FOUND = 25110,
    SPEECH_ERROR_IVW_INVALID_SN = 25111,
    SPEECH_ERROR_IVW_LIMITTED = 25112,
    SPEECH_ERROR_IVW_TIME_OUT = 25113,

    SPEECH_ERROR_IVW_ENROLL1_SUCESS = 25114,
    SPEECH_ERROR_IVW_ENROLL1_FAILED = 25115,
    SPEECH_ERROR_IVW_ENROLL2_SUCESS = 25116,
    SPEECH_ERROR_IVW_ENROLL2_FAILED = 25117,
    SPEECH_ERROR_IVW_ENROLL3_SUCESS = 25118,
    SPEECH_ERROR_IVW_ENROLL3_FAILED = 25119,
    SPEECH_ERROR_IVW_SPEECH_TOO_SHORT = 25120,
    SPEECH_ERROR_IVW_SPEECH_STOP = 25121,


 SPEECH_ERROR_LFASR_BASE = 26000,
};
# 14 "demo.c" 2
typedef int SR_DWORD;
typedef short int SR_WORD ;


typedef struct _wave_pcm_hdr
{
 char riff[4];
 int size_8;
 char wave[4];
 char fmt[4];
 int fmt_size;

 short int format_tag;
 short int channels;
 int samples_per_sec;
 int avg_bytes_per_sec;
 short int block_align;
 short int bits_per_sample;

 char data[4];
 int data_size;
} wave_pcm_hdr;


wave_pcm_hdr default_wav_hdr =
{
 { 'R', 'I', 'F', 'F' },
 0,
 {'W', 'A', 'V', 'E'},
 {'f', 'm', 't', ' '},
 16,
 1,
 1,
 16000,
 32000,
 2,
 16,
 {'d', 'a', 't', 'a'},
 0
};

int text_to_speech(const char* src_text, const char* des_path, const char* params)
{
 int ret = -1;
 FILE* fp = 
# 58 "demo.c" 3 4
                            ((void *)0)
# 58 "demo.c"
                                ;
 const char* sessionID = 
# 59 "demo.c" 3 4
                            ((void *)0)
# 59 "demo.c"
                                ;
 unsigned int audio_len = 0;
 wave_pcm_hdr wav_hdr = default_wav_hdr;
 int synth_status = MSP_TTS_FLAG_STILL_HAVE_DATA;

 if (
# 64 "demo.c" 3 4
    ((void *)0) 
# 64 "demo.c"
         == src_text || 
# 64 "demo.c" 3 4
                        ((void *)0) 
# 64 "demo.c"
                             == des_path)
 {
  printf("params is error!\n");
  return ret;
 }
 fp = fopen(des_path, "wb");
 if (
# 70 "demo.c" 3 4
    ((void *)0) 
# 70 "demo.c"
         == fp)
 {
  printf("open %s error.\n", des_path);
  return ret;
 }

 sessionID = QTTSSessionBegin(params, &ret);
 if (MSP_SUCCESS != ret)
 {
  printf("QTTSSessionBegin failed, error code: %d.\n", ret);
  fclose(fp);
  return ret;
 }
 ret = QTTSTextPut(sessionID, src_text, (unsigned int)strlen(src_text), 
# 83 "demo.c" 3 4
                                                                       ((void *)0)
# 83 "demo.c"
                                                                           );
 if (MSP_SUCCESS != ret)
 {
  printf("QTTSTextPut failed, error code: %d.\n",ret);
  QTTSSessionEnd(sessionID, "TextPutError");
  fclose(fp);
  return ret;
 }
 printf("正在合成 ...\n");
 fwrite(&wav_hdr, sizeof(wav_hdr) ,1, fp);
 while (1)
 {

  const void* data = QTTSAudioGet(sessionID, &audio_len, &synth_status, &ret);
  if (MSP_SUCCESS != ret)
   break;
  if (
# 99 "demo.c" 3 4
     ((void *)0) 
# 99 "demo.c"
          != data)
  {
   fwrite(data, audio_len, 1, fp);
      wav_hdr.data_size += audio_len;
  }
  if (MSP_TTS_FLAG_DATA_END == synth_status)
   break;
 }
 printf("\n");
 if (MSP_SUCCESS != ret)
 {
  printf("QTTSAudioGet failed, error code: %d.\n",ret);
  QTTSSessionEnd(sessionID, "AudioGetError");
  fclose(fp);
  return ret;
 }

 wav_hdr.size_8 += wav_hdr.data_size + (sizeof(wav_hdr) - 8);


 fseek(fp, 4, 0);
 fwrite(&wav_hdr.size_8,sizeof(wav_hdr.size_8), 1, fp);
 fseek(fp, 40, 0);
 fwrite(&wav_hdr.data_size,sizeof(wav_hdr.data_size), 1, fp);
 fclose(fp);
 fp = 
# 124 "demo.c" 3 4
     ((void *)0)
# 124 "demo.c"
         ;

 ret = QTTSSessionEnd(sessionID, "Normal");
 if (MSP_SUCCESS != ret)
 {
  printf("QTTSSessionEnd failed, error code: %d.\n",ret);
 }

 return ret;
}

int main(int argc, char* argv[])
{
 int ret = MSP_SUCCESS;
 const char* login_params = "appid = 6fcb5ea2, work_dir = .";
# 149 "demo.c"
 const char* session_begin_params = "engine_type = local,voice_name=xiaoyan, text_encoding = UTF8, tts_res_path = fo|res/tts/xiaoyan.jet;fo|res/tts/common.jet, sample_rate = 16000, speed = 50, volume = 50, pitch = 50, rdn = 2";
 const char* filename = "tts_sample.wav";
 const char* text = "科大讯飞作为智能语音技术提供商，在智能语音技术领域有着长期的研究积累，并在中文语音合成、语音识别、口语评测等多项技术上拥有技术成果。科大讯飞是我国以语音技术为产业化方向的国家863计划产业化基地";

 ret = MSPLogin(18167282967,inet1529,);
 if (MSP_SUCCESS != ret)
 {
  printf("MSPLogin failed, error code: %d.\n", ret);
  goto exit ;
 }

 printf("\n###########################################################################\n");
 printf("## 语音合成（Text To Speech，TTS）技术能够自动将任意文字实时转换为连续的 ##\n");
 printf("## 自然语音，是一种能够在任何时间、任何地点，向任何人提供语音信息服务的  ##\n");
 printf("## 高效便捷手段，非常符合信息时代海量数据、动态更新和个性化查询的需求。  ##\n");
 printf("###########################################################################\n\n");


 printf("开始合成 ...\n");
 ret = text_to_speech(text, filename, session_begin_params);
 if (MSP_SUCCESS != ret)
 {
  printf("text_to_speech failed, error code: %d.\n", ret);
 }
 printf("合成完毕\n");

exit:
 printf("按任意键退出 ...\n");
 getchar();
 MSPLogout();

 return 0;
}
